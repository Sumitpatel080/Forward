version: "3.8"

services:
  ytdl-bot:
    container_name: ytdl-leech-bot
    build:
      context: .
      dockerfile: Dockerfile
    command: python main.py
    restart: unless-stopped
    ports:
      - "6512:80"
      - "4587:8080"
    environment:
      - API_ID=${API_ID}
      - API_HASH=${API_HASH}
      - BOT_TOKEN=${BOT_TOKEN}
      - DB_URL=${DB_URL}
      - DATABASE_NAME=${DATABASE_NAME}
      - DUMP_CHAT_IDS=${DUMP_CHAT_IDS}
    volumes:
      - ./downloads:/app/downloads
      - ./logs:/app/logs
      - ./sessions:/app/sessions
    networks:
      - ytdl-network
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health', timeout=10)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    container_name: ytdl-mongodb
    image: mongo:7.0
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=ytdl_bot
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - ytdl-network

  redis:
    container_name: ytdl-redis
    image: redis:7.2-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - ytdl-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  ytdl-network:
    driver: bridge
